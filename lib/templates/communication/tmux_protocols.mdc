---
description: AMOS tmux - Simple communication reference
globs:
alwaysApply: true
---

# üì° AMOS Communication

## Message Format (Complete Context Required)
```bash
tmux send-keys -t [TARGET] "[FROM]‚Üí[TO]: [TYPE]: [MESSAGE] | READ: [REQUIRED_FILES]" C-m
```

## Complete Context Messages

### Manager Assignments (First-time orientation included)
```bash
# Planning assignment with full context + auto-checkpoint
tmux send-keys -t PLANNER "MANAGER‚ÜíPLANNER: PLAN_REQUEST: Design OAuth login system | READ: amos_config.mdc (standards), tech_stack_practices.mdc (tech conventions), agent_state.mdc (session), src/auth/ (existing patterns), WORKFLOW_PHASES.mdc (plan format)" C-m
git add -A && git commit -m "MANAGER DELEGATE: Planning request sent to PLANNER
Agent: MANAGER
Phase: PLAN
Task: OAuth login system design
Files: agent_state.mdc
Status: HANDOFF
ü§ñ AMOS Auto-Checkpoint" && git push origin HEAD

# Implementation assignment with full context + auto-checkpoint
tmux send-keys -t WORKER "MANAGER‚ÜíWORKER: IMPLEMENT: src/auth/oauth.ts login flow | READ: amos_config.mdc (standards), tech_stack_practices.mdc (tech conventions), agent_state.mdc (plan details), src/auth/existing.ts (patterns), tests/auth/ (test style). Use Context7 MCP if unclear on OAuth patterns." C-m
git add -A && git commit -m "MANAGER DELEGATE: Implementation assigned to WORKER
Agent: MANAGER
Phase: DELEGATE
Task: OAuth login flow implementation
Files: agent_state.mdc
Status: HANDOFF
ü§ñ AMOS Auto-Checkpoint" && git push origin HEAD

# Status check with context + auto-checkpoint
tmux send-keys -t WORKER "MANAGER‚ÜíWORKER: STATUS_CHECK: Progress on oauth.ts? | READ: Original task in agent_state.mdc, acceptance criteria from PLANNER output" C-m
git add -A && git commit -m "MANAGER STATUS_CHECK: Requested progress update from WORKER
Agent: MANAGER
Phase: DELEGATE
Task: OAuth progress monitoring
Files: agent_state.mdc
Status: MONITORING
ü§ñ AMOS Auto-Checkpoint" && git push origin HEAD
```

### Planner Responses (Self-contained)
```bash
# Plan delivery with context + auto-checkpoint
tmux send-keys -t MANAGER "PLANNER‚ÜíMANAGER: ‚úÖ PLAN_READY: OAuth system (3 tasks) | CONTEXT: Plan in agent_state.mdc, follows amos_config.mdc patterns, integrates with src/auth/ structure" C-m
git add -A && git commit -m "PLANNER COMPLETE: OAuth architecture plan delivered
Agent: PLANNER
Phase: PLAN
Task: OAuth system architecture
Files: agent_state.mdc
Status: COMPLETE
ü§ñ AMOS Auto-Checkpoint" && git push origin HEAD

# Clarification request with context + auto-checkpoint
tmux send-keys -t MANAGER "PLANNER‚ÜíMANAGER: ‚ö†Ô∏è CLARIFICATION: Need OAuth provider specs | CONTEXT: Reviewed amos_config.mdc and src/auth/ but missing external service details for complete architecture" C-m
git add -A && git commit -m "PLANNER CLARIFICATION: Requested OAuth provider specifications
Agent: PLANNER
Phase: PLAN
Task: OAuth system architecture
Files: agent_state.mdc
Status: BLOCKED
ü§ñ AMOS Auto-Checkpoint" && git push origin HEAD
```

### Worker Updates (Complete status)
```bash
# Progress with context + auto-checkpoint
tmux send-keys -t MANAGER "WORKER‚ÜíMANAGER: üîÑ STATUS: 75% oauth.ts complete | CONTEXT: Following amos_config.mdc standards, implementing PLANNER design from agent_state.mdc, tests match tests/auth/patterns" C-m
git add -A && git commit -m "WORKER PROGRESS: 75% OAuth implementation complete
Agent: WORKER
Phase: DELEGATE
Task: OAuth login flow implementation
Files: src/auth/oauth.ts
Status: IN_PROGRESS
ü§ñ AMOS Auto-Checkpoint" && git push origin HEAD

# Completion with context + auto-checkpoint
tmux send-keys -t MANAGER "WORKER‚ÜíMANAGER: ‚úÖ COMPLETE: oauth.ts login flow | CONTEXT: Meets acceptance criteria from agent_state.mdc, follows amos_config.mdc patterns, includes tests matching project style" C-m
git add -A && git commit -m "WORKER COMPLETE: OAuth login flow implementation finished
Agent: WORKER
Phase: DELEGATE
Task: OAuth login flow implementation
Files: src/auth/oauth.ts, tests/auth/oauth.test.ts
Status: COMPLETE
ü§ñ AMOS Auto-Checkpoint" && git push origin HEAD

# Blocker with context + auto-checkpoint
tmux send-keys -t MANAGER "WORKER‚ÜíMANAGER: ‚ö†Ô∏è BLOCKED: Missing OAuth config | CONTEXT: Implementing oauth.ts per agent_state.mdc plan, but need .env setup details not in amos_config.mdc" C-m
git add -A && git commit -m "WORKER BLOCKED: Missing OAuth configuration details
Agent: WORKER
Phase: DELEGATE
Task: OAuth login flow implementation
Files: src/auth/oauth.ts (partial)
Status: BLOCKED
ü§ñ AMOS Auto-Checkpoint" && git push origin HEAD
```

### Agent Handoffs (Complete orientation)
```bash
# PLANNER ‚Üí WORKER handoff
tmux send-keys -t WORKER "PLANNER‚ÜíWORKER: HANDOFF: OAuth implementation ready | READ: agent_state.mdc (complete plan), amos_config.mdc (standards), src/auth/types.ts (interfaces), tests/auth/ (test patterns). TASK: Implement src/auth/oauth.ts following documented approach" C-m

# WORKER ‚Üí PLANNER review
tmux send-keys -t PLANNER "WORKER‚ÜíPLANNER: REVIEW_REQUEST: oauth.ts implementation | READ: src/auth/oauth.ts (implementation), tests/auth/oauth.test.ts (tests), agent_state.mdc (original plan). VERIFY: Meets architecture requirements" C-m
```

## Quick Status Icons
- ‚úÖ Complete/Success
- ‚ùå Failed/Error
- ‚ö†Ô∏è Blocked/Warning
- üîÑ In Progress
- üìå New Task